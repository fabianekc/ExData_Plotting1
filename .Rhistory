load KernSmooth
install.packages(KernSmooth)
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(c("boot", "foreign", "manipulate", "MASS", "mgcv", "nlme"))
x<-diag(3)
x
x<-matrix(rnorm(100),10,10)
x
x*x
x %*% x
y<-x %*% x
solve(x)
solve(x)*x
solve(x) %*% x
cacheSolve(x)
source('~/.active-rstudio-document')
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean([1 2 3 4])
x<-1:4
x
cachemean(x)
makeVector(x)
cachemean(x)
makeVector(cachemean(x)
)
y<-makeVector(cachemean(x))
y$get
x<-1:10
vec<-makeVector(x)
vec$getmean()
mx<-mean(x)
mx
vec$setmean(mx)
vec$getmean()
vec<-makeVector(1:10)
cachemean(vec)
cachemean(vec)
mat<-matrix(rnorm(100),10,10)
cacheSolve(mat)
mat<-makeCacheMatrix(rnorm(100),10,10)
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
cacheSolve(mat)
cacheSolve(mat)
vec<-makeVector(1:10)
cachemean(vec)
cachemean(vec)
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
cacheSolve(mat)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
cacheSolve(mat)
cacheSolve(mat)
z<-cacheSolve(mat)
list(z)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
z<-cacheSolve(mat)
list(z)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
z<-cacheSolve(mat)
list(z)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
z<-cacheSolve(mat)
z
myMat %*% z
is.matrix(z)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
myMat<-matrix(rnorm(100),10,10)
mat<-makeCacheMatrix(myMat)
z<-cacheSolve(mat)
myMat %*% z
z<-cacheSolve(mat)
source('~/.active-rstudio-document')
cacheSolve(makeCacheMatrix(matrix(rnorm(100),10,10)))
cacheSolve(makeCacheMatrix(matrix(rnorm(9),3,3)))
cacheSolve(makeCacheMatrix(matrix(rnorm(9),3,3)))
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
x
x$getInverse
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
x$getInverse
environment(x$get)
environment(x$get)$minv
cacheSolve(x)
environment(x$get)$minv
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
environment(x$get)$minv
cacheSolve(x)
environment(x$get)$minv
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
environment(x$get)$minv
cacheSolve(x)
environment(x$get)$minv
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
environment(x$get)$minv
cacheSolve(x)
cacheSolve(x)
environment(x$get)$minv
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
?numeric
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(x)
cacheSolve(x)
source('~/Documents/coursera/ProgrammingAssignment2/cachematrix.R')
mat<-makeCacheMatrix(matrix(rnorm(9),3,3))
cacheSolve(mat)
cacheSolve(mat)
library(datasets)
data(iris)
?iris
Sepal.length
iris
iris#Sepal.length
mean(iris#Sepal.length)
;
iris[,Sepal.length]
iris.head
?head
head(iris)
iris[,Sepal.Length]
iris#Sepal.Length
head(iris)
?type
typeof(iris)
iris$Sepal.Length
mean(iris$Sepal.Length)
apply(iris[, 1:4], 2, mean)
?apply
apply(iris[, 1:4], 1, mean)
apply(iris, 2, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
head(mtcars)
mtcars$cyl[mtcars$cyl == 4]
mtcars[mtcars$cyl == 4]
mtcars[mtcars$cyl == 4]$cyl
mtcars[mtcars$cyl == 4]
mtcars[,mtcars$cyl == 4]
mtcars[mtcars$cyl == 4,]
mtcars[mtcars$cyl == 4,]$hp
mean(mtcars[mtcars$cyl == 4,]$hp)
mean(mtcars[mtcars$cyl == 8,]$hp)
mean(mtcars[mtcars$cyl == 8,]$hp)-mean(mtcars[mtcars$cyl == 4,]$hp)
debug(ls)
ls
apply(iris[, 1:4], 1, mean)
mean(iris#Sepal.length)
;
mean(iris$Sepal.Length)
mean(iris[iris$Sepal.Length > 2,]$Sepal.Length)
head(iris)
mean(iris[iris$Species == "virginica",]$Sepal.Length)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars[mtcars$cyl == 8,]$hp)-mean(mtcars[mtcars$cyl == 4,]$hp)
set.seed(1)
rpois(5,2)
?rpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
?dbinom
?Rprof
system.time()
source('~/.active-rstudio-document')
x<-hilbert(4)
x
x<-hilbert(1000)
system.time(svd(x))
str(svd)
fileURL <- "http://derstandard.at"
doc <- htmlTreeParse(fileURL, useInternal=TRUE)
library(XML)
doc <- htmlTreeParse(fileURL, useInternal=TRUE)
headlines <- xpathSApply(doc,"//h2", xmlValue)
headlines[1]
xpathSApply(htmlTreeParse(fileUR, useInternal=TRUE),"//h2", xmlValue)[1]
xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)[1]
xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)[1]
x<-xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)[1]
x
toString(x)
y<-"hello"
y
x<-xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)
x
x<-xpathSApply(htmlTreeParse("http://derstandard.at", useInternal=TRUE),"//h2", xmlValue)[1]
x<-"adfqwer"
x[1:5]
x(1:5)
substr(x,1,5)
substr(x,6,10)
substr(x,1,5)
x<-"äöd"
iconvlist()
iconv(x, "LATIN2", "UTF-8")
x<-"äöd"
iconv(x, UTF-8", "LATIN2)
iconv(x, "UTF-8", "LATIN2")
x
y<-"  "
x+y
paste(x,y,sep="")
paste(x,replicate(2, " "),sep="")
paste(x,paste(replicate(2, " "),sep=""),sep="")
stri_dup(" ",2)
replicate(2, " ")
paste(replicate(2, " "), sep="")
paste(replicate(2, " "), collapse="")
paste(x,paste(replicate(2, " "),collapse=""),sep="")
paste(x,paste(replicate(2, " "),collapse=""),collapse="")
paste(x,paste(replicate(3, " "),collapse=""),collapse="")
r.result = "asdf  "
mr = sub("\\s+$", "", r.result)
mr
sub?
;
help sub
str(sub)
install.packages("httr")
setwd("~/Documents/coursera/datasciencecoursera/exploringData/ExData_Plotting1")
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot1.R')
data<-read.csv("./data/household_power_consumption.txt")
?read.csv
data<-read.csv("./data/household_power_consumption.txt", sep=";", colClasses=c("Date", "Time"))
data<-read.csv("./data/household_power_consumption.txt", sep=";")
names(data)
data$Date<-as.Date(data$Date)
head(data)
tail(data)
?as.Date
data<-read.csv("./data/household_power_consumption.txt", sep=";")
data$Date<-as.Date(data$Date, "%d/%m/%Y")
head(data)
tail(data)
data2<-data[data$Date==as.POSIXct("2007-02-01") | data$Date==as.POSIXct("2007-02-02"),]
data2<-data[data$Date==as.POSIXct("2007-02-01"),]
data2<-data[data$Date>=as.POSIXct("2007-02-01") & data$Date<=as.POSIXct("2007-02-02"),]
data2<-data[data$Date>=as.Date("2007-02-01") & data$Date<=as.Date("2007-02-02"),]
data2<-data[data$Date>=as.Date("2007-02-01") & data$Date<=as.Date("2007-02-02"),]
head(data2$Time)
data2$Time<-
asd
?strptime
data2$Time<-strptime(data2$Time,"%H:%M:%S")
head(data2)
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot1.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot1.R')
View(Data)
View(data)
paste("asdf", "qwer")
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot1.R')
View(data)
?histo
?hist
hist(data$Global_active_power)
png(file="plot1.png")
hist(data$Global_active_power)
dev.off()
png(file="plot1.png")
with(data, hist(Global_ active_power))
with(data, hist(dataGlobal_ active_power))
?with
hist(data$Global_active_power)
dev.off()
?histo
?hist
hist(data$Global_active_power, col="red")
title(main="Global Active Power")
xlab("Global Active Power (kilowatts)")
hist(data$Global_active_power, col="red", xlab("Global Active Power (kilowatts)")
asdf
hist(data$Global_active_power, col="red", xlab="Global Active Power (kilowatts)")
dev.off()
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot1.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot1.R')
?write.csv
write.csv(data,"./data/short.csv")
mydata<-read.csv("./data/short.csv")
mydata$Date<-as.Date(mydata$Date)
mydata$Time<-strptime(mydata$Time,"%Y-%m-%d %H:%M:%S")
View(mydata)
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot2.R')
?plot
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot2.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot2.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot2.R')
View(data)
?legend
plot(data$Time, data$Sub_metering_1, type="l", col="black"
main="", xlab="", ylab="Energy sub metering")
plot(data$Time, data$Sub_metering_1, type="l", col="black",
main="", xlab="", ylab="Energy sub metering")
plot(data$Time, data$Sub_metering_2, type="l", col="red",
main="", xlab="", ylab="")
plot(data$Time, data$Sub_metering_3, type="l", col="blue",
main="", xlab="", ylab="")
legend(right, top)
legend("topright")
legend("topright", legend="Sub_metering_1")
?legend
dev.off()
plot(data$Time, data$Sub_metering_1, type="l", col="black",
main="", xlab="", ylab="Energy sub metering")
?lines
lines(data$Sub_metering_2, col="red")
lines(data$Sub_metering_2, col="red")
lines(data$Time, data$Sub_metering_2, col="red")
lines(data$Time, data$Sub_metering_3, col="blue")
legend("topright", legend="Sub_metering_1")
?legend
legend("topright", legend="Sub_metering_1", col="black")
legend("topright", legend="Sub_metering_2", col="red")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3") , col=c("black", red", "blue"))
lty=1, col=c('red', 'blue', 'green',' brown'), bty='n', cex=.75)
legend('topright', names(a)[-1] , lty=1, col=c('red', 'blue', 'green',' brown'), bty='n', cex=.75)
legend('topright', names(data)[-1] , lty=1, col=c('red', 'blue', 'green',' brown'), bty='n', cex=.75)
names(data)
names(data)[7..9]
names(data)[7-9]
names(data)[-1]
names(data)[7]
names(data)[7,8,9]
names(data)[7|8|9]
names(data)[-3:]
tail(names(data),3)
legend('topright',tail(names(data),3) , lty=1, col=c('black', 'red', 'blue'))
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot3.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot3.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot3.R')
source('~/.active-rstudio-document')
write.csv(data, "./data/short.csv")
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot2.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot2.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot3.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot1.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot1.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot2.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot3.R')
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot4.R')
RStudio.version()
as.list(Sys.getenv())
as.list(Sys.getenv())S
Sys.setenv("$LANG", "en_US.UTF-8")
?Sys.setenv
Sys.getenv("LANG")
Sys.setenv(LANG = "en_US.UTF-8")
Sys.getenv("LANG")
source('~/Documents/coursera/dataScience/exploringData/ExData_Plotting1/plot2.R')
Sys.getenv("LANG")
